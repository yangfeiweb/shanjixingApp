import React, { Component } from "react";
import {
  View,
  Text,
  Image,
  StyleSheet,
  AsyncStorage,
  DeviceEventEmitter
} from "react-native";
import { EVENT } from "../utility/dict";
import { utility } from "../utility";
import { IMAGE_PATH, IMG_TYPE } from "../utility/dict";

export default class LeftUserInfo extends Component {
  constructor(props) {
    super(props);
    this.changeIcon = null;
    this.recharge = null;
    this.state = {
      image: { uri: "asset:/userAvatar/default.png" },
      mobile: "",
      VipDays: ""
    };
  }

  componentDidMount() {
    this.setUserIcon();
    this.computedVipDays();
    this.changeIcon = DeviceEventEmitter.addListener(
      EVENT.CHANGE_ICON,
      data => {
        //监听头像的变化
        this.setUserIcon();
      }
    );
    this.recharge = DeviceEventEmitter.addListener(EVENT.RECHARGE, data => {
      //监听充值的变化
      this.computedVipDays();
    });
  }

  componentWillUnmount() {
    this.changeIcon && this.changeIcon.remove();
    this.recharge && this.recharge.remove();
  }
  getCurrUserInfo(callback) {
    AsyncStorage.getItem("studentNo").then(studentNo => {
      if (studentNo) {
        AsyncStorage.getItem("usersInfo").then(res => {
          if (res) {
            let data = JSON.parse(res);
            let item = data.find(item => item.studentNo === studentNo);
            callback && callback(item);
          }
        });
      }
    });
  }
  setUserIcon() {
    this.getCurrUserInfo(item => {
      if (item) {
        this.setState({
          image: { uri: item.icon || "" }
        });
      }
    });
  }
  computedVipDays() {
    this.getCurrUserInfo(item => {
      let text = "";
      if (item) {
        if (item.vipDeadTime) {
          text = utility.getVipDescription(item.vipDeadTime, item.serverTime);
        } else {
          text = "还未充值VIP哦";
        }
      }
      this.setState({ VipDays: text, mobile: item.mobile });
    });
  }
  render() {
    return (
      <View
        style={[styles.container, { flexDirection: "row", marginLeft: 20 }]}
      >
        <View style={styles.imgBox}>
          <Image
            source={this.state.image}
            style={styles.img}
            defaultSource={{
              uri: "asset:/userAvatar/default.png",
              width: 100,
              height: 100,
              scale: 1
            }}
          />
        </View>
        <View
          style={{
            marginLeft: 10,
            alignItems: "flex-start",
            justifyContent: "flex-start"
          }}
        >
          <Text style={{ color: "#D3DD7F" }}>{this.state.mobile}</Text>
          <View style={[styles.container, { flexDirection: "row" }]}>
            <Text style={styles.text}>{this.state.VipDays}</Text>
          </View>
        </View>
      </View>
    );
  }
}

const styles = StyleSheet.create({
  container: {
    alignItems: "center",
    justifyContent: "flex-start"
  },
  imgBox: {
    width: 40,
    height: 40,
    borderRadius: 40,
    overflow: "hidden"
  },
  img: {
    width: 40,
    height: 40
  },
  text: {
    color: "#ffffff",
    fontSize: 12
  }
});
