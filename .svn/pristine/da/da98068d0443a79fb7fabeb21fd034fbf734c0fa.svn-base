import { ToastAndroid, AsyncStorage } from "react-native";
import { ResourcePath } from "../services/urlConfig";
const oneDayTime = 24 * 60 * 60 * 1000; //一天的时间
function baseRandom(lower, upper) {
  return lower + Math.floor(Math.random() * (upper - lower + 1));
}

function shuffle(arr) {
  let index = -1;
  let length = arr.length;
  let lastIndex = length - 1;
  while (++index < length) {
    let rand = baseRandom(index, lastIndex);
    let value = arr[rand];
    arr[rand] = arr[index];
    arr[index] = value;
  }
  return arr;
}
function arraySample(array) {
  var length = array.length;
  return length ? array[baseRandom(0, length - 1)] : undefined;
}

function convert2Boolean(val) {
  let result = false;
  if (typeof val === "string") {
    if (val === "true" || val === "1") {
      result = true;
    }
  } else if (typeof val === "number") {
    if (val > 0) {
      result = true;
    }
  } else if (val === true) {
    result = true;
  }
  return result;
}

// format yyyy-MM-dd hh:mm:ss to date obj
function timeStrToObj(str) {
  let strArr = str.split(" ");
  if (strArr.length === 2) {
    let dateArr = strArr[0].split("-");
    let timeArr = strArr[1].split(":");

    let yyyy = dateArr[0];
    let mth = dateArr[1] - 1;
    let dd = dateArr[2];
    let hh = timeArr[0] || "00";
    let mm = timeArr[1] || "00";
    let ss = timeArr[2] || "00";
    return new Date(yyyy, mth, dd, hh, mm, ss);
  } else {
    return "";
  }
}

// format date to yyyy-MM-dd hh:mm:ss
function dateToTimeStr(date) {
  let yyyy = date.getFullYear();
  let mth = dateNum2Str(date.getMonth() + 1);
  let dd = dateNum2Str(date.getDate());
  let hh = dateNum2Str(date.getHours());
  let mm = dateNum2Str(date.getMinutes());
  let ss = dateNum2Str(date.getSeconds());
  return `${yyyy}-${mth}-${dd} ${hh}:${mm}:${ss}`;
}

// format date to yyyy-MM-dd
function dateToDateStr(date) {
  let yyyy = date.getFullYear();
  let mth = dateNum2Str(date.getMonth() + 1);
  let dd = dateNum2Str(date.getDate());
  let hh = dateNum2Str(date.getHours());
  let mm = dateNum2Str(date.getMinutes());
  let ss = dateNum2Str(date.getSeconds());
  return `${yyyy}-${mth}-${dd}`;
}

// format date to yyyy-MM-dd
function dateToDateShortStr(date) {
  let yyyy = date.getFullYear();
  let mth = dateNum2Str(date.getMonth() + 1);
  let dd = dateNum2Str(date.getDate());
  let hh = dateNum2Str(date.getHours());
  let mm = dateNum2Str(date.getMinutes());
  let ss = dateNum2Str(date.getSeconds());
  return `${yyyy}${mth}${dd}`;
}

// format date string yyyy-MM-dd HH:mm:ss to yyyyMMddHHmmss
function dateStandardStrToShortStr(dateStr) {
  if (!dateStr) {
    return "";
  }
  dateStr = dateStr.replace(/"/g, ""); // 处理错误的时间字符串
  dateStr = dateStr.replace(/-/g, "");
  dateStr = dateStr.replace(/ /g, "");
  dateStr = dateStr.replace(/:/g, "");
  return dateStr;
}

function dateNum2Str(num) {
  if (num < 10) {
    return "0" + num;
  } else {
    return num + "";
  }
}
function Toast(msg = "", duration = 2000, postion = ToastAndroid.CENTER) {
  ToastAndroid.showWithGravity(msg, duration, postion);
}

function computeDays(currDate, serverTime) {
  let time = timeStrToObj(currDate);
  let nowDate = new Date();
  if (serverTime) {
    let serverDate = timeStrToObj(serverTime);
    let year = serverDate.getFullYear();
    let month = serverDate.getMonth();
    let day = serverDate.getDate();
    nowDate.setFullYear(year);
    nowDate.setMonth(month);
    nowDate.setDate(day);
  }
  let diff = time - nowDate;
  return diff / oneDayTime;
}

//获取剩余vip天数 的描述
function getVipDescription(currDate, serverTime) {
  let text = "";
  let day = computeDays(currDate, serverTime);
  if (day < 0) {
    text = "您的VIP已过期,请尽快充值";
  } else if (day > 1) {
    day = Math.floor(day);
    text = "VIP剩余天数:" + day + "天";
  } else {
    day = Math.ceil(day);
    text = "您的VIP剩余天数不足1天";
  }
  return text;
}
//format date to  yyyyMMddhhmmss
function getTs() {
  return dateToTimeStr(new Date()).replace(/[\s|\s*-\s*|:]/g, "");
}

function guid() {
  function S4() {
    return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);
  }
  return (
    S4() +
    S4() +
    "-" +
    S4() +
    "-" +
    S4() +
    "-" +
    S4() +
    "-" +
    S4() +
    S4() +
    S4()
  );
}

function getUsersInfo() {
  //得到所有的用户信息，和当前用户的信息
  return new Promise((resolve, reject) => {
    AsyncStorage.getItem("studentNo")
      .then(studentNo => {
        if (studentNo) {
          AsyncStorage.getItem("usersInfo")
            .then(res => {
              let data = JSON.parse(res);
              let currUserInfo = null;
              if (data) {
                data = data.map(item => {
                  if (item) {
                    let obj = Object.assign({}, item);
                    let icon = obj.icon;
                    if (
                      icon.indexOf("asset") === -1 &&
                      icon.indexOf("com") === -1
                    ) {
                      icon = ResourcePath + icon;
                    }
                    obj.icon = icon;
                    if (obj.studentNo === studentNo) {
                      currUserInfo = obj;
                    }
                    return obj;
                  }
                });
              }
              let obj = {
                usersInfo: data,
                currUserInfo: currUserInfo
              };
              resolve(obj);
            })
            .catch(err => {
              reject(err);
            });
        }
      })
      .catch(err => {
        reject(err);
      });
  });
}

function getWeekSection(date) {
  //根据某个日期获取当周的周一和周日的日期
  let week = [];
  let nowTime = date.getTime();
  let day = date.getDay() || 7;
  let MondayTime = nowTime - (day - 1) * oneDayTime; //周一
  let startDate = new Date(MondayTime);
  let startTime = startDate.getTime();
  week.push(dateToDateStr(startDate));
  for (let i = 1; i < 7; i++) {
    let s = i * oneDayTime;
    let time = new Date(startTime + s);
    week.push(dateToDateStr(time));
  }
  return week;
}

function getCurrMonthDay(date) {
  //根据某个日期，获取当月的日期
  let time = new Date(date);
  let arr = [];
  let currMouthDate = new Date(time.getFullYear(), time.getMonth() + 1, 0); //当月最后一天的 date
  let days = currMouthDate.getDate(); //得到当月一共月几天
  let dateTimes = currMouthDate.getTime();
  let temp = null;
  for (let i = 0; i < days; i++) {
    let s = dateTimes - i * oneDayTime;
    temp = new Date(s);
    arr.unshift(dateToDateStr(temp));
  }
  return arr;
}

function randomLetter(source) {
  source = source.toLowerCase();
  let letterArr = [
    "a",
    "b",
    "c",
    "d",
    "e",
    "f",
    "g",
    "h",
    "i",
    "j",
    "k",
    "l",
    "m",
    "n",
    "o",
    "p",
    "q",
    "r",
    "s",
    "t",
    "u",
    "v",
    "w",
    "x",
    "y",
    "z"
  ];
  let sourceIdx = letterArr.findIndex(item => {
    return item === source;
  });
  let targetIdx = randomExcept(0, 25, sourceIdx);
  return letterArr[targetIdx];
}

function randomExcept(lower, upper, except) {
  let result = baseRandom(lower, upper);
  if (result != except) {
    return result;
  } else {
    return randomExcept(lower, upper, except);
  }
}

export default {
  baseRandom,
  randomExcept,
  arraySample,
  timeStrToObj,
  dateToTimeStr,
  dateToDateStr,
  dateToDateShortStr,
  dateStandardStrToShortStr,
  Toast,
  guid,
  shuffle,
  computeDays,
  getTs,
  getUsersInfo,
  getWeekSection,
  getCurrMonthDay,
  getVipDescription,
  randomLetter
};
